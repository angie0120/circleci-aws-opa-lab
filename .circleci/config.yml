version: 2.1

jobs:
  test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Hello World
          command: echo "Hello from CircleCI!"

  policy-validation:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Install OPA and jq
          command: |
            sudo apt-get update
            sudo apt-get install -y jq curl
            curl -L -o opa https://openpolicyagent.org/downloads/v0.58.0/opa_linux_amd64_static
            chmod +x opa
            sudo mv opa /usr/local/bin/
      - run:
          name: Run OPA unit tests
          command: |
            opa version
            opa test policies/ tests/
      - run:
          name: Evaluate sample resources
          command: |
            # Compliant sample
            cat > compliant-s3.json <<'JSON'
            {
              "resource_type": "aws_s3_bucket",
              "server_side_encryption_configuration": {
                "rule": { "apply_server_side_encryption_by_default": { "sse_algorithm": "AES256" } }
              },
              "versioning": { "enabled": true }
            }
            JSON
            # Non-compliant sample
            cat > noncompliant-s3.json <<'JSON'
            {
              "resource_type": "aws_s3_bucket",
              "acl": "public-read"
            }
            JSON

            echo "Compliant eval (expect no denies):"
            opa eval -d policies/ -i compliant-s3.json "data.aws.s3.security.deny" --format pretty

            echo "Non-compliant eval (expect denies):"
            opa eval -d policies/ -i noncompliant-s3.json "data.aws.s3.security.deny" --format pretty

  test-aws-connection:
    docker:
      - image: cimg/base:stable
    environment:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - checkout
      - run:
          name: Install prerequisites
          command: |
            sudo apt-get update
            sudo apt-get install -y unzip jq curl
      - run:
          name: Install AWS CLI v2
          command: |
            curl -sS "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install
            aws --version
      - run:
          name: Configure OIDC and Test AWS STS (with fallback)
          command: |
            set -e
            export AWS_ROLE_ARN="${AWS_ROLE_ARN:-arn:aws:iam::399966706844:role/CircleCILabRole}"
            export AWS_WEB_IDENTITY_TOKEN_FILE="/tmp/web-identity-token"
            echo "$CIRCLE_OIDC_TOKEN" > "$AWS_WEB_IDENTITY_TOKEN_FILE"
            echo "Attempt 1: provider chain"
            if aws sts get-caller-identity >/dev/null 2>&1; then
              aws sts get-caller-identity
              exit 0
            fi
            echo "Attempt 2: explicit assume-role-with-web-identity"
            CREDS=$(aws sts assume-role-with-web-identity \
              --role-arn "$AWS_ROLE_ARN" \
              --role-session-name circleci-oidc \
              --web-identity-token "$CIRCLE_OIDC_TOKEN" \
              --duration-seconds 900)
            export AWS_ACCESS_KEY_ID=$(echo "$CREDS" | jq -r .Credentials.AccessKeyId)
            export AWS_SECRET_ACCESS_KEY=$(echo "$CREDS" | jq -r .Credentials.SecretAccessKey)
            export AWS_SESSION_TOKEN=$(echo "$CREDS" | jq -r .Credentials.SessionToken)
            aws sts get-caller-identity

workflows:
  security-pipeline:
    jobs:
      - test
      - policy-validation:
          requires:
            - test
      - test-aws-connection:
          requires:
            - policy-validation
